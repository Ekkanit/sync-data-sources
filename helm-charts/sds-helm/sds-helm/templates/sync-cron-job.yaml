{{- $skipCron := .Values.skipCron -}}
{{ if not $skipCron }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  namespace: '{{ .Values.namespace }}'
  name: '{{ .Values.syncPodName }}'
  labels:
    type: 'cron'
{{- with .Values.labels -}}
{{ toYaml . | nindent 4 }}
{{ end }}
    app.kubernetes.io/name: {{ include "sds-helm.name" . }}
    helm.sh/chart: {{ include "sds-helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  schedule: '{{ .Values.schedule }}'
  concurrencyPolicy: {{ .Values.concurrencyPolicy }}
  jobTemplate:
    spec:
      template:
        metadata:
          name: '{{ .Values.syncPodName }}'
          labels:
            type: 'sync'
{{- with .Values.labels -}}
{{ toYaml . | nindent 12 }}
{{ end }}
            app.kubernetes.io/name: {{ include "sds-helm.name" . }}
            helm.sh/chart: {{ include "sds-helm.chart" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
            app.kubernetes.io/managed-by: {{ .Release.Service }}
        spec:
          containers:
          - command:
            - {{ .Values.syncCommand }}
{{ if .Values.syncCommandArgs }}
            args:
{{- with .Values.syncCommandArgs -}}
{{ toYaml . | nindent 14 }}
{{ end }}
{{ end }}
{{ if .Values.useResourcesLimits }}
            resources:
              requests:
                memory: '{{ .Values.requestsMemory }}'
                cpu: '{{ .Values.requestsCPU }}'
              limits:
                memory: '{{ .Values.limitsMemory }}'
                cpu: '{{ .Values.limitsCPU }}'
{{ end }}
            env:
            - name: SDS_DEBUG
              value: '{{ .Values.sdsDebug }}'
            - name: SDS_CMDDEBUG
              value: '{{ .Values.sdsCmdDebug }}'
            - name: SDS_ST
              value: '{{ .Values.sdsST }}'
            - name: SDS_NCPUS
              value: '{{ .Values.sdsNCPUs }}'
            - name: SDS_CTXOUT
              value: '{{ .Values.sdsCtxOut }}'
            - name: SDS_SKIPTIME
              value: '{{ .Values.sdsSkipTime }}'
            - name: SH_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.shSecret }}
                  key: SH_USER.secret
            - name: SH_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.shSecret }}
                  key: SH_HOST.secret
            - name: SH_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.shSecret }}
                  key: SH_PORT.secret
            - name: SH_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.shSecret }}
                  key: SH_PASS.secret
            - name: SH_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.shSecret }}
                  key: SH_DB.secret
            - name: SDS_ES_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.esSecret }}
                  key: ES_URL.secret
            - name: ZIPPASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.zipSecret }}
                  key: ZIPPASS.secret
            image: '{{ .Values.syncImage }}-{{ .Values.deployEnv }}'
            imagePullPolicy: {{ .Values.imagePullPolicy }}
            name: '{{ .Values.syncPodName }}'
            volumeMounts:
            - name: '{{ .Values.pvName }}'
              mountPath: '{{ .Values.pvMountPath }}'
          volumes:
          - name: '{{ .Values.pvName }}'
            persistentVolumeClaim:
              claimName: '{{ .Values.pvName }}'
          restartPolicy: {{ .Values.syncRestartPolicy }}
{{ if .Values.useNodeSelector }}
          nodeSelector:
{{- with .Values.nodeSelector -}}
{{ toYaml . | nindent 12 }}
{{ end }}
{{ end }}
{{ end }}
